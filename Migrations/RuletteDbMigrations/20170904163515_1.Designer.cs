// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Rulette.MyDb;
using System;

namespace Rulette.Migrations.RuletteDbMigrations
{
    [DbContext(typeof(RuletteDb))]
    [Migration("20170904163515_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rulette.MyDb.BetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BetId");

                    b.Property<double>("ItemCost");

                    b.Property<string>("ItemName");

                    b.HasKey("Id");

                    b.HasIndex("BetId");

                    b.ToTable("BetsList");
                });

            modelBuilder.Entity("Rulette.MyDb.Bets", b =>
                {
                    b.Property<int>("BetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BetsId")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("Date");

                    b.HasKey("BetId");

                    b.HasIndex("BetsId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("Rulette.MyDb.Inventory", b =>
                {
                    b.Property<string>("InventoryId")
                        .HasMaxLength(30);

                    b.Property<string>("ItemListId")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("InventoryId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("Rulette.MyDb.InventoryItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("ItemCost");

                    b.Property<string>("ItemListId")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ItemName");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemListId");

                    b.ToTable("ItemList");
                });

            modelBuilder.Entity("Rulette.MyDb.User", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("BetsId")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("InventoryId")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Rulette.MyDb.BetItem", b =>
                {
                    b.HasOne("Rulette.MyDb.Bets", "Bets")
                        .WithMany("BetsList")
                        .HasForeignKey("BetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Rulette.MyDb.Bets", b =>
                {
                    b.HasOne("Rulette.MyDb.User", "User")
                        .WithMany("Bets")
                        .HasForeignKey("BetsId")
                        .HasPrincipalKey("BetsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Rulette.MyDb.Inventory", b =>
                {
                    b.HasOne("Rulette.MyDb.User", "User")
                        .WithOne("Inventory")
                        .HasForeignKey("Rulette.MyDb.Inventory", "InventoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Rulette.MyDb.InventoryItem", b =>
                {
                    b.HasOne("Rulette.MyDb.Inventory", "Inventory")
                        .WithMany("ItemList")
                        .HasForeignKey("ItemListId")
                        .HasPrincipalKey("ItemListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
